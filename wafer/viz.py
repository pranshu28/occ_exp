import matplotlib.pylab as plt
import numpy as np
import seaborn as sns


def corr_(df):
    c = df.transpose().corr().abs()
    # print(c)
    s = c.unstack()
    so = s.sort_values(kind="quicksort").dropna()
    so = so[so != 1.0][-100:-1:2]
    print(so)
    sns.heatmap(c)


def plot(fig, df, x, y, run, wafer):
    f, axarr = plt.subplots(x, y)
    f.set_figure(fig)
    row = df[(df.run == run) & (df.wafer == wafer)]
    ann = row.iloc[0]['ann']
    col = 2
    x_axis = np.array(range(1, len(df.loc[row.index[0], df.columns[col]].split(",")) + 1))
    f.subplots_adjust(hspace=0.3)
    print("Plot:", fig, "=>", str(run) + '-' + str(wafer) + "=" + ann, "; Length =",len(x_axis))
    f.suptitle(str(run) + '-' + str(wafer) + "=" + ann, fontsize=16)
    for i in range(x):
        for j in range(y):
            data = [int(t) for t in row.iloc[0][df.columns[col]].split(",")]
            axarr[i, j].scatter(x_axis, data, marker='.')
            axarr[i, j].set_title(df.columns[col])
            col += 1
    return len(x_axis)


def col_plot(df, x, y, run=None, waf=None):
    if waf is not None:
        return plot(0, df, x, y, run, waf)
    else:
        col = []
        for ind, row in df.iterrows():
            col.append(plot(ind, df, x, y, row.run, row.wafer))
        return col

# n_path = "/home/pranshu/Documents/Projects/IITM/AM/temp_data/wafer/normal"
# ab_path = "/home/pranshu/Documents/Projects/IITM/AM/temp_data/wafer/abnormal"
# normal = get_df(n_path)
# abnormal = get_df(ab_path).drop(['box'], axis=1)
# print("DF ready", normal.shape, abnormal.shape)
# n = col_plot(normal,3,2) # [144,137,140,135,144,134,134,114,139,139,139,137,134,132,135,139,144,128,135,133,125,138,133,138,133,135,138,125,132,139,139,137,127,129,137,134,134,134,133,127,146,130,140,151,138,138,139,133,138,127,138,143,134,122,139,137,142,141,126,125,137,134,137,130,120,124,130,141,131,131,129,128,129,144,138,132,139,132,141,145,145,135,138,131,135,125,128,139,120,129,139,149,132,131,139,138,142,136,131,132,133,128,134,132,129,119,145,148,137,134,141,139,140,133,143,141,142,131,132,132,144,137,138,146,138,118,133,139,139,136,124,146,129,129,142,132,142,135,139,133,138,130,149,150,133,129,137,135,143,141,139,135,136,131,140,132,133,145,138,136,141,138,133,130,140,142,131,141,131,131,138,132,135,136,133,134,134,139,127,128,134,133,140,139,132,143,136,139,137,141,136,128,138,140,135,133,130,128,138,134,131,144,146,147,125,138,142,136,127,142,132,131,136,138,119,130,129,139,130,134,144,136,129,137,137,139,138,133,140,146,137,132,133,129,130,135,147,121,133,132,144,134,133,132,143,139,128,133,137,134,135,127,135,148,139,142,139,137,132,132,129,145,138,132,136,151,130,131,126,138,129,130,138,143,136,132,136,134,128,130,146,146,141,145,138,142,131,128,133,135,137,142,128,136,140,125,138,130,119,146,138,140,141,145,125,144,144,141,135,141,132,134,137,138,138,130,139,140,131,142,132,135,128,133,138,147,142,139,137,150,131,131,132,147,145,132,129,129,139,143,148,142,132,134,136,143,134,123,139,139,145,130,133,140,136,138,134,129,133,139,134,141,148,141,146,134,137,146,139,137,147,134,128,136,134,131,128,139,137,131,132,132,138,138,138,142,133,138,137,125,133,132,134,147,129,140,137,129,125,135,137,126,134,137,137,129,129,138,131,132,129,138,133,134,136,146,133,131,137,144,136,132,129,143,132,133,138,131,119,144,139,137,121,138,147,137,145,119,132,122,141,132,143,148,144,133,138,138,137,137,134,135,137,131,138,137,137,127,132,137,140,140,138,131,127,132,149,142,138,132,130,138,138,137,141,139,128,128,134,135,145,140,138,133,129,140,128,136,134,131,132,136,134,136,144,138,138,137,136,131,143,134,129,145,134,131,137,139,125,131,139,133,131,140,127,129,140,129,137,139,129,138,125,144,134,141,138,147,135,128,143,139,129,132,130,143,141,134,142,144,137,135,144,147,138,142,131,131,136,136,142,141,139,131,133,144,139,147,132,140,136,134,129,129,139,136,140,139,140,127,125,128,129,135,132,140,125,128,134,138,142,128,136,138,134,132,147,141,137,139,145,128,139,138,134,136,136,139,146,149,139,129,140,133,136,127,141,133,135,137,129,129,131,138,146,138,141,138,143,136,135,136,132,137,127,131,146,137,136,133,138,122,149,118,134,131,118,136,136,138,132,137,132,129,128,145,134,140,126,139,139,131,138,136,137,133,137,141,133,140,139,123,130,138,144,145,142,144,127,139,143,140,142,146,127,128,147,147,131,130,145,140,145,149,145,148,132,144,130,142,136,126,143,133,127,130,139,152,137,138,133,144,127,131,130,144,142,136,129,131,140,130,125,140,134,127,140,139,140,141,140,128,124,135,141,129,145,135,131,135,131,141,133,126,145,139,135,132,128,139,129,149,141,126,136,136,137,131,135,147,135,129,139,131,140,141,136,141,131,141,140,146,142,133,141,138,136,138,127,143,138,139,138,147,140,141,122,137,137,145,138,133,131,148,121,137,138,144,140,129,136,131,129,138,131,138,121,126,127,143,140,139,146,129,131,152,128,131,136,137,138,146,135,136,127,141,133,127,132,139,131,140,140,142,125,140,137,136,147,126,145,134,133,134,131,129,141,134,137,134,135,145,139,146,130,128,138,132,146,144,128,135,137,138,142,136,136,127,134,135,143,140,133,134,137,133,148,133,140,127,139,135,138,134,135,129,134,140,128,133,143,137,138,134,129,130,138,129,120,135,138,148,131,138,148,133,142,136,125,145,133,140,132,131,137,138,134,128,136,129,139,138,136,124,146,137,139,134,133,145,133,134,145,139,133,127,136,136,137,148,133,135,133,134,140,132,145,148,146,147,138,133,131,139,142,133,140,131,138,143,138,133,137,130,135,143,134,132,130,137,139,147,129,134,139,145,140,130,135,138,134,137,130,137,136,135,134,145,128,140,148,130,140,133,137,137,130,140,137,141,130,136,140,138,139,130,127,129,135,136,136,133,138,139,142,132,131,142,146,135,143,131,139,130,142,133,134,125,126,149,132,132,133,130,141,148,131,147,133,140,132,141,138,127,130,134,139,132,133,144,146,131,135,135,139,130,131,144,144,145,136,141,135,129,146,132,142,134,138,134,133,143,128,146,130,136,128]
# a = col_plot(abnormal,3,2) # [141,146,149,144,148,110,144,149,198,149,149,141,135,135,104,142,146,147,145,142,144,140,147,144,148,144,148,159,134,142,133,144,149,143,141,145,148,149,140,132,147,143,142,144,146,134,143,142,143,158,146,148,148,135,143,148,145,145,146,143,145,142,149,142,144,149,144,139,140,143,144,146,142,148,141,146,148,137,137,144,149,142,148,145,138,149,146,149,145,149,144,145,148,148,147,144,147,147,148,143,149,144,139,140,142,141,143,147,145,143,144,142,149,143,139,137,144,147,147,145,142,145,143,133,143,146,147]

# print(min(n),max(n),np.mean(n),np.std(n))
# print(min(a),max(a),np.mean(a),np.std(a))
# plt.show()